---
# Qwen3-0.6B Model serving with vLLM for OpenShift
# Small but capable model perfect for testing GPU serving on OpenShift
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  annotations:
    openshift.io/display-name: Qwen3-0.6B-Instruct
    serving.kserve.io/deploymentMode: RawDeployment
    sidecar.istio.io/inject: "false"
  name: qwen3-0-6b-instruct
  namespace: llm
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  predictor:
    maxReplicas: 1
    minReplicas: 1
    serviceAccountName: kserve-service-account
    nodeSelector:
      nvidia.com/gpu.present: "true"
    tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
    model:
      modelFormat:
        name: vLLM
      name: ''
      storageUri: hf://Qwen/Qwen3-0.6B
      resources:
        limits:
          cpu: "4"
          memory: 8Gi
          nvidia.com/gpu: "1"
        requests:
          cpu: "1"
          memory: 4Gi
          nvidia.com/gpu: "1"
      runtime: vllm-latest
      env:
        - name: HF_TOKEN
          value: ""
        - name: HOME
          value: "/tmp"
        - name: XDG_CACHE_HOME
          value: "/tmp/.cache"
        - name: VLLM_CACHE_ROOT
          value: "/tmp/vllm_cache"
        - name: TRITON_CACHE_DIR
          value: "/tmp/triton_cache"
        - name: FLASHINFER_WORKSPACE_DIR
          value: "/tmp/flashinfer_cache"
---
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    opendatahub.io/apiProtocol: REST
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
    openshift.io/display-name: "vLLM Latest with Qwen3 Support (OpenShift)"
    opendatahub.io/template-display-name: "vLLM Latest with Qwen3 Support (OpenShift)"
    opendatahub.io/template-name: vllm-latest-openshift
    sidecar.istio.io/inject: "false"
  name: vllm-latest
  namespace: llm
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
  containers:
    - name: kserve-container
      image: vllm/vllm-openai:latest
      args:
        - --port=8080
        - --model=/mnt/models
        - --served-model-name={{.Name}}
        - --distributed-executor-backend=mp
        - --max-model-len=6144
        - --trust-remote-code
        - --gpu-memory-utilization=0.8
        - --max-num-seqs=32
      env:
        - name: HOME
          value: /tmp
        - name: XDG_CACHE_HOME
          value: /tmp/.cache
        - name: VLLM_CACHE_ROOT
          value: /tmp/vllm_cache
        - name: FLASHINFER_WORKSPACE_DIR
          value: /tmp/flashinfer_cache
        - name: HF_HOME
          value: /tmp/hf_home
        - name: TRANSFORMERS_CACHE
          value: /tmp/transformers_cache
        - name: VLLM_WORKER_MULTIPROC_METHOD
          value: spawn
      ports:
        - containerPort: 8080
          protocol: TCP
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000960000
        allowPrivilegeEscalation: false
        capabilities:
          drop: [ "ALL" ]
      volumeMounts:
        - name: shm
          mountPath: /dev/shm
        - name: tmp
          mountPath: /tmp
      resources:
        limits:
          nvidia.com/gpu: "1"
        requests:
          nvidia.com/gpu: "1"
  multiModel: false
  supportedModelFormats:
    - name: vLLM
      autoSelect: true
  volumes:
    - name: shm
      emptyDir:
        medium: Memory
        sizeLimit: 2Gi
    - name: tmp
      emptyDir:
        sizeLimit: 4Gi

